EARLIER VERSIONS (version 0x03)

[HEADER]
<TODO>

# HEADER - BIGENDIAN    (16 bytes)
metadata                  4 bytes
filesize                  4 bytes
version                   4 bytes
data offset               4 bytes

-------------------------------------------------------------------------------

UNITY 4 VERSION  (version 0x09)

[HEADER]
<TODO>

# HEADER - BIGENDIAN    (20 bytes)
metadata                  4 bytes
filesize                  4 bytes
version                   4 bytes
data offset               4 bytes
endianness                1 byte
------ 3 bytes of padding -------

-------------------------------------------------------------------------------

BIG FILE SUPPORT (version 0x16)

[HEADER]
[UNITY_VERSION] until null byte
[HEADER TAIL]
[ASSET TYPES]
[ENTRY INDEX]

# HEADER - BIGENDIAN    (48 bytes)
------ 8 bytes of padding -------
version                   4 bytes
------ 4 bytes of padding -------
endianness                1 byte  // 00 means little endian
------ 3 bytes of padding -------
metadata                  4 bytes
filesize                  8 bytes
data offset               8 bytes
------ 8 bytes of padding -------

# UNITY_VERSION - UTF-8 HAS NO ENDIANNESS. THANKS LARA.
string until null byte

# HEADER TAIL - DEPENDS ON `endianness` FROM HEADER. 0 is little endian
target platform           4 bytes
type tree enabled         1 bytes // boolean

# ASSET TYPES - DEPENDS ON `endianness` FROM HEADER. 0 is little endian
count                     4 bytes
[asset-type 1]
[asset-type 2]
...
[asset-type count]

asset-type:
class id                  4 bytes
is stripped               1 byte // boolean
script type index         2 bytes
if class id == 114:
  script id              16 bytes
endif
old type hash            16 bytes

# ASSET INDEX - DEPENDS ON `endianness` FROM HEADER. 0 is little endian
count                     4 bytes
--- pad to align with 4 bytes ---
[entry 1]                24 bytes
[entry 2]                24 bytes
...                 each 24 bytes
[entry count]            24 bytes

entry:
path id                   8 bytes
offset                    8 bytes // the actual offset will be
                                  // this + data_offset from header
size                      4 bytes
asset type index          4 bytes
